Function AddMissingKeys(ByVal inputDict As Object) As Object
    ' Reconstruct the dictionary based on the sorted keys
    Dim dict As Object
    Set dict = CreateObject("Scripting.Dictionary")

    ' Add missing keys (times from 1 to 24) to dictionary
    Dim key As Variant
    Dim i As Integer
    
    ' Loop through keys 1 to 24
    For i = 1 To 24
        ' Check if the key is not present in the dictionary
        If Not dict.Exists(i) Then
            ' Add the missing key with a value of 0
            dict.Add i, 0
        End If
    Next i
    
    ' Return the updated dictionary
    Set AddMissingKeys = dict
End Function


Function SortDictionaryByKey(ByVal inputDict as Object) As Object
    ' Get the keys into an array
    Dim keys() As Variant
    ReDim keys(0 To inputDict.Count - 1)
    Dim i As Integer
    i = 0
    For Each Key In inputDict.keys
        keys(i) = Key
        i = i + 1
    Next Key

    ' Reconstruct the dictionary based on the sorted keys
    Dim sortedDict As Object
    Set sortedDict = AddMissingKeys(inputDict)
    
    ' Sort the keys
    QuickSort keys, LBound(keys), UBound(keys)
    
    Dim key As Variant
    For Each key In keys
        sortedDict.Add key, inputDict(key)
    Next key
    Set SortDictionaryByKey = sortedDict
End Sub

Sub QuickSort(ByRef arr As Variant, ByVal low As Long, ByVal high As Long)
    Dim pivot As Variant
    Dim tempSwap As Variant
    Dim i As Long
    Dim j As Long
    
    If low < high Then
        pivot = arr(high)
        i = low - 1
        
        For j = low To high - 1
            If arr(j) < pivot Then
                i = i + 1
                tempSwap = arr(i)
                arr(i) = arr(j)
                arr(j) = tempSwap
            End If
        Next j
        
        tempSwap = arr(i + 1)
        arr(i + 1) = arr(high)
        arr(high) = tempSwap
        
        QuickSort arr, low, i
        QuickSort arr, i + 2, high
    End If
End Sub
